services:
  api: &main_app
    build:
      context: .
      dockerfile: ./Dockerfile
    image: communere_rag:${COMMUNERERAG_VERSION:-latest}
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      chroma:
        condition: service_started
    environment:
      COMMUNERERAG_HOST: 0.0.0.0
      COMMUNERERAG_DB_HOST: ${DB_HOST}
      COMMUNERERAG_DB_PORT: ${DB_PORT}
      COMMUNERERAG_DB_USER: ${DB_USER}
      COMMUNERERAG_DB_PASS: ${DB_PASS}
      COMMUNERERAG_DB_BASE: ${DB_BASE}
      COMMUNERERAG_REDIS_HOST: ${REDIS_HOST}
  db:
    image: mongo:7.0
    hostname: CommunereRAG-db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
    command: "mongod"
    volumes:
      - db-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 40

  taskiq-worker:
    <<: *main_app
    labels: [ ]
    command:
      - taskiq
      - worker
      - CommunereRAG.tkq:broker

  chroma:
    image: chromadb/chroma:latest
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=${PERSIST_DIRECTORY:-/chroma/chroma}
    healthcheck:
      # Adjust below to match your container port
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v2/heartbeat" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: bitnami/redis:6.2.5
    hostname: "CommunereRAG-redis"
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 50
volumes:
  db-data:
  chroma_data:
